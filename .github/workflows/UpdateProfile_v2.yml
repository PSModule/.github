name: Update profile

on:
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

permissions:
  contents: read

jobs:
  update_readme:
    name: Update Profile README
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update README
        uses: PSModule/GitHub-Script@v1
        with:
          ClientID: ${{ secrets.APP_ID }}
          PrivateKey: ${{ secrets.APP_PRIVATE_KEY }}
          Script: |
            LogGroup "Connect to org [$env:GITHUB_REPOSITORY_OWNER]" {
              $org = '${{ github.repository_owner }}'
              $appContext = Get-GitHubConfig -Name DefaultContext
              Write-Verbose (Get-GitHubContext | Select-Object *) -Verbose
              $orgInstallations = Get-GitHubAppInstallation | Where-Object { $_.Target_type -eq 'Organization' }
                            
              $orgInstallations | ForEach-Object {
                  $orgName = $_.account.login
                  $orgInstallationID = $_.id
                  Write-Host "Processing [$orgName] [$orgInstallationID]"
                  Set-GitHubDefaultContext -Context $appContext
                  $token = New-GitHubAppInstallationAccessToken -InstallationID $_.id | Select-Object -ExpandProperty Token
                  Connect-GitHub -Token $token -Silent

                  "<DO SOMETHING>"

                  #Disconnect-GitHub
              } 
              #Disconnect-GitHub -Context $appContext
            }

            LogGroup 'Update README' {
              . ".\scripts\UpdateReadme.ps1"
            }

            $changedFiles = git diff --name-only
            $hasChanges = $null -ne $changedFiles
            "hasChanges=$hasChanges" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

            if (-not $hasChanges) {
              Write-Host 'No automated changes detected'
              return
            }

            # git add .
            # Write-Host '::group::Changed files [$($changedFiles.Count)]'
            # $changedFiles | ForEach-Object { Write-Host $_ }
            # Write-Host '::endgroup::'
            # git commit -m "Auto-generated changes"
            # git push

      # - name: Trigger publish
      #   env:
      #     GH_TOKEN: ${{ steps.auth.outputs.token }}
      #   run: |
      #     gh workflow run --repo psmodule/${{ github.repository_owner }}.github.io Publish-Docs.yml
